@inject VibeHome.UI.Shared.NotificationService NotificationService
@implements IDisposable

<div class="notification-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
    @foreach (var notification in notifications)
    {
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header @GetToastHeaderClass(notification.Type)">
                <strong class="me-auto">@GetToastTitle(notification.Type)</strong>
                <button type="button" class="btn-close" @onclick="() => RemoveNotification(notification.Id)"></button>
            </div>
            <div class="toast-body">
                @notification.Message
            </div>
        </div>
    }
</div>

@code {
    private List<NotificationMessage> notifications = new();

    protected override void OnInitialized()
    {
        NotificationService.OnNotification += AddNotification;
    }

    private void AddNotification(NotificationMessage notification)
    {
        notifications.Add(notification);
        StateHasChanged();

        // Auto-remove after duration
        _ = Task.Delay(notification.Duration).ContinueWith(_ =>
        {
            InvokeAsync(() =>
            {
                RemoveNotification(notification.Id);
            });
        });
    }

    private void RemoveNotification(Guid id)
    {
        notifications.RemoveAll(n => n.Id == id);
        StateHasChanged();
    }

    private string GetToastHeaderClass(NotificationType type) => type switch
    {
        NotificationType.Success => "bg-success text-white",
        NotificationType.Error => "bg-danger text-white",
        NotificationType.Warning => "bg-warning text-dark",
        NotificationType.Info => "bg-info text-white",
        _ => "bg-secondary text-white"
    };

    private string GetToastTitle(NotificationType type) => type switch
    {
        NotificationType.Success => "✅ Success",
        NotificationType.Error => "❌ Error",
        NotificationType.Warning => "⚠️ Warning",
        NotificationType.Info => "ℹ️ Info",
        _ => "📢 Notification"
    };

    public void Dispose()
    {
        NotificationService.OnNotification -= AddNotification;
    }
} 